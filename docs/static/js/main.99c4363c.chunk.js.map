{"version":3,"sources":["components/utils/addButton.svg","components/utils/deleteButton.svg","models/NotebookData.ts","utils/dataUtils.ts","components/utils/AddButton.tsx","components/utils/DeleteButton.tsx","parsers/texParser.ts","components/Tex.tsx","components/Block.tsx","components/utils/TextBox.tsx","components/Section.tsx","components/Notebook.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","EMPTY_BLOCK_DATA","code","EMPTY_SECTION_DATA","header","blocks","EMPTY_NOTEBOOK_DATA","title","sections","NotebookData","obj","Array","isArray","map","section","block","BlockData","filter","SectionData","setArrayMember","arr","newVal","i","val","j","addArrayMember","undefined","_","deleteArrayMember","StyledDiv","styled","div","StyledPlus","img","inverted","StyledLine","AddButton","onClick","className","src","icon","alt","StyledBin","DeleteButton","newLine","type","characterParser","regexpMatch","match","value","inlineParser","displayParser","firstPhaseToSecond","el","secondPhaseToThird","texParser","many","oneOf","result","reduce","total","length","push","InlineTeX","dangerouslySetInnerHTML","__html","texToHtml","DisplayTeX","TextParagraph","paragraphData","key","TeX","parsedTeX","preparedCode","replace","prepareCode","state","run","__type__","parseTeX","displayMode","katex","renderToString","output","e","console","log","StyledBlock","StyledCode","span","StyledBar","Block","data","setData","deleteData","onChange","ev","newCode","textArea","target","StyledTextBox","input","TextBox","StyledSection","StyledH","h3","Section","setBlockData","addBlockData","deleteBlockData","StyledNotebook","h2","Notebook","setSectionData","addSectionData","deleteSectionData","StyledNavButton","button","sampleNotebook","App","useState","notebookData","setNotebookData","document","createElement","accept","multiple","onchange","file","files","text","then","JSON","parse","json","click","a","download","href","encodeURIComponent","stringify","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99c4363c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addButton.e186591a.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteButton.b3ecb651.svg\";","export interface NotebookData {\n  title: string\n  sections: SectionData[]\n}\n\nexport interface SectionData {\n  header: string\n  blocks: BlockData[]\n}\n\nexport interface BlockData {\n  code: string\n}\n\nexport const EMPTY_BLOCK_DATA = {\n  code: ''\n}\n\nexport const EMPTY_SECTION_DATA = {\n  header: 'New Section',\n  blocks: [\n    EMPTY_BLOCK_DATA\n  ]\n}\n\nexport const EMPTY_NOTEBOOK_DATA = {\n  title: 'New Notebook',\n  sections: [\n    EMPTY_SECTION_DATA\n  ]\n}\n\nexport const BlockData: (obj: any) => BlockData | null\n  = (obj) => typeof(obj) === 'object' ?\n    {\n      code: obj.code ?? ''\n    } : null\n\nexport const SectionData: (obj: any) => SectionData | null\n  = (obj) => typeof(obj) === 'object' ?\n    {\n      header: obj.header ?? '',\n      blocks: Array.isArray(obj.blocks) ?\n        (obj.blocks as Array<any>)\n          .map((block) => BlockData(block))\n          .filter((block) => block !== null) as BlockData[] :\n        []\n    } : null\n\nexport const NotebookData: (obj: any) => NotebookData | null\n  = (obj) => typeof(obj) === 'object' ?\n    {\n      title: obj.title ?? '',\n      sections: Array.isArray(obj.sections) ?\n        (obj.sections as Array<any>)\n          .map((section) => SectionData(section))\n          .filter((section) => section !== null) as SectionData[] :\n          []\n    } : null\n","export const setArrayMember: <T>(arr: T[], newVal: T, i: number) => T[]\n  = (arr, newVal, i) => arr.map((val, j) => i === j ? newVal : val )\n\nexport const addArrayMember: <T>(arr: T[], val: T, i?: number) => T[]\n  = (arr, val, i) => i === undefined ?\n  [...arr, val] :\n  [\n    ...arr.filter((_, j) => j < i),\n    val,\n    ...arr.filter((_, j) => j >= i)\n  ]\n\nexport const deleteArrayMember: <T>(arr: T[], i: number) => T[]\n  = (arr, i) => arr.filter((_, j) => i !== j)\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport icon from './addButton.svg'\n\nconst StyledDiv = styled.div`\n  display: inline-flex;\n  width: calc(100% - 0.5rem);\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  align-items: center;\n`\ninterface StyledPlusProps {\n  inverted?: boolean\n}\n\nconst StyledPlus = styled.img<StyledPlusProps>`\n  color: white;\n  height: 1.2rem;\n  width: 1.2rem;\n  cursor: pointer;\n  ${({inverted}) => (inverted ?? false) ? 'filter: invert(100%);' : ''}\n`\n\nconst StyledLine = styled.div`\n  height: 1px;\n  background-color: white;/* hsl(0, 0%, 50%);*/\n  flex-grow: 1;\n  margin: 0 0.5rem;\n`\n\ninterface AddButtonProps extends StyledPlusProps {\n  onClick?: () => void\n}\n\nexport const AddButton: FunctionComponent<AddButtonProps> = ({\n  onClick,\n  inverted\n}) => (\n  <StyledDiv className=\"btn-add\">\n    <StyledPlus\n      onClick={onClick}\n      inverted={inverted}\n      src={icon}\n      alt=\"+\"\n    />\n    <StyledLine></StyledLine>\n  </StyledDiv>\n)\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport icon from './deleteButton.svg'\n\ninterface StyledBinProps {\n  inverted?: boolean\n}\n\nconst StyledBin = styled.img<StyledBinProps>`\n  height: 0.75rem;\n  width: 0.75rem;\n  cursor: pointer;\n  ${({inverted}) => (inverted ?? false) ? 'filter: invert(100%);' : ''}\n`\n\ninterface DeleteButtonProps extends StyledBinProps {\n  onClick?: () => void\n}\n\nexport const DeleteButton: FunctionComponent<DeleteButtonProps> = ({\n  onClick,\n  inverted\n}) => (\n  <div className=\"btn-delete\">\n    <StyledBin\n      onClick={onClick}\n      inverted={inverted}\n      src={icon}\n      alt=\"+\"\n    />\n  </div>\n)\n","import { many, oneOf, regexpMatch } from \"parseriver\"\n\nconst prepareCode: (code: string) => string\n  = (code) => code\n    .replace(/^\\n*/, '')\n    .replace(/\\n+/g, '\\n')\n\ninterface Character {\n  type: 'Character'\n  value: string\n}\n\ninterface InlineTeXData {\n  type: 'InlineTeX'\n  value: string\n}\n\ninterface DisplayTeXData {\n  type: 'DisplayTeX'\n  value: string\n}\n\ninterface Text {\n  type: \"Text\"\n  value: string\n}\n\ninterface NewLine {\n  type: \"Newline\"\n}\n\nexport interface Paragraph {\n  type: 'Paragraph'\n  value: Array<Text | InlineTeXData>\n}\n\nconst newLine: NewLine = {\n  type: 'Newline'\n}\n\ntype FirstPhaseTeXData = Character | InlineTeXData | DisplayTeXData\ntype SecondPhaseTeXData = Text | NewLine | InlineTeXData | DisplayTeXData\nexport type ThirdPhaseTeXData = Paragraph | DisplayTeXData\n\nconst characterParser = regexpMatch(/^.|\\n/)\n  .map((match) => ({\n    type: 'Character',\n    value: match[0] ?? ''\n  }))\nconst inlineParser = regexpMatch(/^\\\\\\((((?!\\\\\\)|\\\\\\().|\\n)*)\\\\\\)/)\n  .map((match) => ({\n    type: 'InlineTeX',\n    value: match[1] ?? ''\n  }))\nconst displayParser = regexpMatch(/^\\\\\\[(((?!\\\\\\]|\\\\\\[).|\\n)*)\\\\\\]/)\n  .map((match) => ({\n    type: 'DisplayTeX',\n    value: match[1] ?? ''\n  }))\n\nconst firstPhaseToSecond: (el: FirstPhaseTeXData) => SecondPhaseTeXData\n  = (el) => (el.type === 'Character' ? ({\n    type: 'Text',\n    value: el.value\n  }) : el)\n\nconst secondPhaseToThird: (el: SecondPhaseTeXData) => ThirdPhaseTeXData\n  = (el) => (el.type === 'DisplayTeX' ? el : ({\n    type: 'Paragraph',\n    value: (el.type === 'Newline') ? [] : [el]\n  }))\n\nconst texParser = many(oneOf(\n  displayParser,\n  inlineParser,\n  characterParser\n)).map((result: FirstPhaseTeXData[]) => result.reduce<SecondPhaseTeXData[]>(\n  (total, el) => {\n    if (el.value === '\\n') return [...total, newLine]\n    \n    if (\n      el.type !== 'Character' ||\n      total.length === 0 ||\n      total[total.length - 1].type !== 'Text'\n    ) return [...total, firstPhaseToSecond(el)]\n\n    ;(total[total.length - 1] as Text).value += el.value\n    return total\n  },\n  []\n)).map((result) => result.reduce<ThirdPhaseTeXData[]>(\n  (total, el) => {\n    if (\n      el.type === 'DisplayTeX' ||\n      el.type === 'Newline' ||\n      total.length === 0 ||\n      total[total.length - 1].type === 'DisplayTeX'\n    ) return [...total, secondPhaseToThird(el)]\n    \n    ;(total[total.length - 1] as Paragraph).value.push(el)\n    return total\n  },\n  []\n))\n\nexport const parseTeX: (code: string) => ThirdPhaseTeXData[]\n  = (code) => {\n    const preparedCode = prepareCode(code)\n    const state = texParser.run(preparedCode)\n\n    return state.__type__==='ResultState' ? state.result : []\n  }\n","import React, { FunctionComponent } from 'react'\nimport katex from 'katex'\nimport 'katex/dist/katex.css'\nimport { parseTeX, Paragraph } from '../parsers/texParser'\n\ninterface TeXProps {\n  code: string\n}\n\ninterface ParagraphProps {\n  paragraphData: Paragraph\n}\n\nexport const InlineTeX: FunctionComponent<TeXProps> = ({code}) => {\n\n  return (\n    <span dangerouslySetInnerHTML={{__html: texToHtml(code)}}></span>\n  )\n}\n\nexport const DisplayTeX: FunctionComponent<TeXProps> = ({code}) => {\n\n  return (\n    <span dangerouslySetInnerHTML={{__html: texToHtml(code, true)}}></span>\n  )\n}\n\nexport const TextParagraph: FunctionComponent<ParagraphProps> = ({paragraphData}) => {\n\n  return <p>\n    {paragraphData.value.map((el, i) => (\n      el.type === 'InlineTeX' ?\n        <InlineTeX key={`inline-tex-${i}`} code={el.value}/> :\n        el.value\n    ))}\n  </p>\n\n}\n\nexport const TeX: FunctionComponent<TeXProps> = ({code}) => {\n\n  const parsedTeX = parseTeX(code)\n\n  return <div className=\"tex\">\n    {parsedTeX.map((el, i) => (\n      el.type === 'DisplayTeX' ?\n        <DisplayTeX key={`display-tex-${i}`} code={el.value} /> :\n        <TextParagraph key={`text-paragraph-${i}`} paragraphData={el} />\n    ))}\n  </div>\n}\n\nconst texToHtml: (code: string, displayMode?: boolean) => string\n  = (code, displayMode = false) => {\n  try {\n    return katex.renderToString(\n      code,\n      {\n        output: 'html',\n        displayMode\n      }\n    )\n  } catch(e) {\n    console.log('nope')\n    return code\n  }\n}\n","import React, { FunctionComponent, FormEvent } from \"react\"\nimport styled from 'styled-components'\nimport { BlockData } from \"../models/NotebookData\"\nimport { DeleteButton } from \"./utils/DeleteButton\"\nimport { TeX } from \"./Tex\"\n\nconst StyledBlock = styled.div`\n  font-size: 0.75rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-content: stretch;\n  width: 100%;\n  margin: 0.5rem 0;\n\n  &>* {\n    min-height: 200px;\n    width: 45%;\n    color: black;\n    text-align: left;\n  }\n\n  &>.tex {\n    background-color: white;\n    padding: 0.5rem;\n    border-radius: 0.2rem;\n  }\n\n  textarea {\n    font-size: inherit;\n    background-color: white;\n    width: 100%;\n    height: 100%;\n    padding: 0.5rem;\n    padding-top: calc(0.5rem + 1em);\n    border: 2px solid hsl(0, 0%, 50%);\n    resize: none;\n    outline: none;\n    border-radius: 0.2rem;\n  }\n\n  textarea:focus {\n    border: 2px solid hsl(210, 100%, 50%);\n  }\n`\n\nconst StyledCode = styled.span`\n  position: relative;\n`\n\nconst StyledBar = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 1em;\n  top: 0;\n  left: 0;\n  padding: 2px 2px 0 2px;\n\n  .btn-delete {\n    float: right;\n  }\n`\n\ninterface BlockProps {\n  data: BlockData\n  setData: (data: BlockData) => void\n  deleteData: () => void\n}\n\nexport const Block: FunctionComponent<BlockProps> = ({\n  data,\n  setData,\n  deleteData\n}) => {\n  const { code } = data\n\n  const setCode: (newCode: string) => void\n    = (newCode) => setData({\n      ...data,\n      code: newCode\n    })\n\n  const onTextAreaInput = (ev: FormEvent<HTMLTextAreaElement>) => {\n    const textArea = ev.target as HTMLTextAreaElement\n    setCode(textArea.value)\n  }\n\n  return (\n    <StyledBlock>\n      <StyledCode>\n        <StyledBar>\n          <DeleteButton onClick={deleteData} inverted/>\n        </StyledBar>\n        <textarea value={code} onChange={(onTextAreaInput)}></textarea>\n      </StyledCode>\n      <TeX code={code}/>\n    </StyledBlock>\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\n\nconst StyledTextBox = styled.input`\n  font-size: inherit;\n  font-weight: inherit;\n  width: 100%;\n  text-align: center;\n  display: inline-block;\n  background-color:  hsl(220, 13%, 22%);\n  color: white;\n  border: none;\n  border-radius: 0.2rem;\n  \n  &:focus {\n    background-color: white;\n    color: black\n  }\n`\n\ninterface TextBoxProps {\n  data: string\n  setData: (data: string) => void\n}\n\nexport const TextBox: FunctionComponent<TextBoxProps> = ({\n  data,\n  setData\n}) => (\n  <StyledTextBox\n    type=\"text\"\n    value={data}\n    onChange={(ev) => {\n      const target = ev.target as HTMLInputElement\n      setData(target.value)\n    }}\n  />\n)\n","import React, { Fragment, FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport { BlockData, EMPTY_BLOCK_DATA, SectionData } from '../models/NotebookData'\nimport { addArrayMember, deleteArrayMember, setArrayMember } from '../utils/dataUtils'\nimport { AddButton } from './utils/AddButton'\nimport { Block } from './Block'\nimport { DeleteButton } from './utils/DeleteButton'\nimport { TextBox } from './utils/TextBox'\n\nconst StyledSection = styled.div`\n  width: calc(100% - 0.5rem);\n  display: inline-block;\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n  border: 1px solid hsl(0, 0%, 50%);\n  border-radius: 0.5rem;\n`\n\nconst StyledH = styled.h3`\n  position: relative;\n  margin: 0.5rem;\n\n  .btn-delete {\n    position: absolute;\n    right: 5px;\n    top: 0;\n  }\n`\n\ninterface SectionProps {\n  data: SectionData\n  setData: (data: SectionData) => void\n  deleteData: () => void\n}\n\nexport const Section: FunctionComponent<SectionProps> = ({\n  data,\n  setData,\n  deleteData\n}) => {\n  const { header, blocks } = data\n\n  const setHeader: (val: string) => void\n    = (val) => setData({\n      ...data,\n      header: val\n    })\n\n  const setBlockData: (i: number) => (block: BlockData) => void\n    = (i) => (block) => setData({\n      ...data,\n      blocks: setArrayMember(blocks, block, i)\n    })\n\n  const addBlockData: (i?: number) => () => void\n    = (i) => () => setData({\n      ...data,\n      blocks: addArrayMember(\n        blocks,\n        EMPTY_BLOCK_DATA,\n        i\n      )\n    })\n\n  const deleteBlockData: (i: number) => () => void\n    = (i) => () => setData({\n      ...data,\n      blocks: deleteArrayMember(\n        blocks,\n        i\n      )\n    })\n\n  return <StyledSection>\n    <StyledH>\n      <TextBox\n        data={header}\n        setData={setHeader}\n      />\n      <DeleteButton onClick={deleteData}/>\n    </StyledH>\n    {\n      blocks.map((block, i) => (<Fragment key={`block-${i}`}>\n        <AddButton onClick={addBlockData(i)} />\n        <Block\n          data={block}\n          setData={setBlockData(i)}\n          deleteData={deleteBlockData(i)}\n        />\n      </Fragment>))\n    }\n    <AddButton onClick={addBlockData()} />\n  </StyledSection>\n}\n","import React, { Fragment, FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport { EMPTY_SECTION_DATA, NotebookData, SectionData } from '../models/NotebookData'\nimport { addArrayMember, deleteArrayMember, setArrayMember } from '../utils/dataUtils'\nimport { AddButton } from './utils/AddButton'\nimport { Section } from './Section'\nimport { TextBox } from './utils/TextBox'\n\nconst StyledNotebook = styled.div`\n  width: calc(100% - 0.5rem);\n  display: inline-block;\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n  border: 1px solid hsl(0, 0%, 50%);\n  border-radius: 0.5rem;\n`\n\nconst StyledH = styled.h2`\n  position: relative;\n  margin: 0.5rem;\n`\n\ninterface NotebookProps {\n  data: NotebookData\n  setData: (data: NotebookData) => void\n}\n\nexport const Notebook: FunctionComponent<NotebookProps> = ({\n  data,\n  setData\n}) => {\n  const { title, sections } = data\n\n  const setTitle: (val: string) => void\n    = (val) => setData({\n      ...data,\n      title: val\n    })\n\n  const setSectionData: (i: number) => (section: SectionData) => void\n    = (i) => (section) => setData({\n      ...data,\n      sections: setArrayMember(sections, section, i)\n    })\n\n  const addSectionData: (i?: number) => () => void\n    = (i) => () => setData({\n      ...data,\n      sections: addArrayMember(\n        sections,\n        EMPTY_SECTION_DATA,\n        i\n      )\n    })\n\n  const deleteSectionData: (i: number) => () => void\n    = (i) => () => setData({\n      ...data,\n      sections: deleteArrayMember(\n        sections,\n        i\n      )\n    })\n\n  return (\n    <StyledNotebook>\n      <StyledH><TextBox\n        data={title}\n        setData={setTitle}\n      /></StyledH>\n          {\n            sections.map((section, i) => (<Fragment key={`section-${i}`}>\n              <AddButton onClick={addSectionData(i)}/>\n              <Section\n                data={section}\n                setData={setSectionData(i)}\n                deleteData={deleteSectionData(i)}\n              />\n            </Fragment>))\n          }\n      <AddButton onClick={addSectionData()} />\n    </StyledNotebook>\n  )\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { Notebook } from './components/Notebook';\nimport { EMPTY_NOTEBOOK_DATA, NotebookData } from './models/NotebookData';\n\nconst StyledNavButton = styled.button`\n  background-color: hsl(210, 30%, 25%);\n  border: none;\n  color: white;\n  height: 100%;\n  border-right: 1px solid white;\n  padding: 0 1rem;\n  transition: background-color 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    background-color: hsl(210, 30%, 30%);\n  }\n`\n\nconst sampleNotebook: NotebookData = {\n  title: 'It is the title',\n  sections: [\n    {\n      header: 'Section 1',\n      blocks: [\n        {\n          code: 'Let \\\\( x \\\\in X \\\\).'\n        }\n      ]\n    },\n    {\n      header: 'The second section',\n      blocks: [\n        {\n          code: ''\n        },\n        {\n          code: ''\n        }\n      ]\n    }\n  ]\n}\n\nfunction App() {\n  const [notebookData, setNotebookData] = useState<NotebookData>(sampleNotebook)\n\n  const openNotebook: () => void\n    = () => {\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.dtxn'\n      input.multiple = false\n      input.onchange = () => {\n        const files = input.files ?? []\n        const file = files[0]\n        if (file !== undefined) {\n          file.text()\n            .then((text) => JSON.parse(text))\n            .then((json) => NotebookData(json))\n            .then((data) => (data !== null) ? setNotebookData(data) : null )\n        }\n      }\n      input.click()\n    }\n\n  const saveNotebook: () => void\n    = () => {\n      const a = document.createElement('a')\n      a.download = 'file.dtxn'\n      a.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(notebookData))\n      a.click()\n    }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <div>\n          <StyledNavButton\n            onClick={() => setNotebookData(EMPTY_NOTEBOOK_DATA)}\n          >\n            New\n          </StyledNavButton>\n          <StyledNavButton\n            onClick={openNotebook}\n          >\n            Open\n          </StyledNavButton>\n          <StyledNavButton\n            onClick={saveNotebook}\n          >\n            Save\n          </StyledNavButton>\n        </div>\n        <header><h1>Digi TeX Note</h1></header>\n      </nav>\n      <main>\n        <Notebook\n          data={notebookData}\n          setData={setNotebookData}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}